import cv2
from smbus2 import *
import numpy as np
from picamera.array import PiRGBArray
from picamera import PiCamera

EXIT_KEY = ord("q")
LOW = [50, 180, 40]
HIGH = [70, 255, 255]
MARKING_COLOR = [0, 0, 255]

def light_on():
	with SMBusWrapper(1) as bus:
		msg = i2c_msg.write(0x70, [0x00, 0xFF])	# turn on i2c msg
		bus.i2c_rdwr(msg)

def light_off():
	with SMBusWrapper(1) as bus:
		msg = i2c_msg.write(0x70, [0x00, 0x00])	# turn off i2c msg
		bus.i2c_rdwr(msg)

# light_on()
camera = PiCamera()
camera.resolution = (640, 480)
camera.framerate = 50
camera.iso = 270
camera.shutter_speed = 750
rawCapture = PiRGBArray(camera, size=(640, 480))
for frame in camera.capture_continuous(rawCapture, format="bgr",
					use_video_port=True):
	image = frame.array		# convert to cv2 handleable format
	cv2.imshow("Raw", i
	hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)
	mask = cv2.inRange(hsv, np.array(LOW), np.array(HIGH))
	filtered = cv2.bitwise_and(image, image, mask=mask)
	cv2.imshow("Filtered", filtered)	# display raw
	key = cv2.waitKey(1) & 0xFF	# if exit key is pressed
	rawCapture.truncate(0)		# clear stream for next image
	if key == EXIT_KEY:		# exit
		break
# light_off()

